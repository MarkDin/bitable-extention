---
description: 开发规则
globs: 
alwaysApply: false
---
# 飞书多维表格插件开发规则

## 项目概述
这是一个基于飞书多维表格的字段自动补全插件，使用 React + TypeScript + Vite 构建。

## 核心文件结构
- 主要页面组件：[client/src/pages/FieldAutoComplete.tsx](mdc:client/src/pages/FieldAutoComplete.tsx)
- 数据同步逻辑：[client/src/lib/dataSync.ts](mdc:client/src/lib/dataSync.ts)
- 自动补全助手：[client/src/lib/autoCompleteHelper.ts](mdc:client/src/lib/autoCompleteHelper.ts)
- 可补全字段组件：[client/src/components/CompletableFields.tsx](mdc:client/src/components/CompletableFields.tsx)

## 飞书多维表格 API 使用规范

### 字段获取最佳实践
1. **获取有序字段列表**：
   - 不要使用 `table.getFieldList()` - 返回无序列表
   - 使用 `view.getVisibleFieldIdList()` 获取有序字段ID列表
   - 通过视图获取字段顺序：`table.getActiveView()` → `view.getVisibleFieldIdList()`

2. **获取A列（第一列）字段**：
   ```typescript
   const activeView = await table.getActiveView();
   const visibleFieldIds = await activeView.getVisibleFieldIdList();
   const firstFieldId = visibleFieldIds[0]; // A列字段ID
   ```

### 配置管理
- 字段映射配置存储在多维表格的 `mapping_config` key 中
- 使用 `bitable.base.setConfig()` 和 `bitable.base.getConfig()` 进行配置管理
- 配置不存在时使用默认配置 `DEFAULT_AVAILABLE_FIELDS`

### 字段分类逻辑
字段按 `query_type` 分类：
- `customer`: 客户相关字段
- `order`: 订单相关字段  
- `both`: 通用字段（两种查询类型都显示）

### 错误处理
- 所有异步操作都要包含 try-catch
- 使用 toast 组件显示用户友好的错误信息
- 记录详细的控制台日志用于调试

## 开发注意事项

### 状态管理
- 使用 React hooks 管理组件状态
- 重要状态：`selectedFields`, `queryType`, `availableFields`, `currentTable`
- 配置加载状态：`configLoading`

### 字段选择逻辑
- 已存在字段自动勾选且不可取消勾选
- 查询类型改变时智能过滤已选字段
- 保持用户选择的有效字段

### API 调用
- 使用 `@lark-base-open/js-sdk` 进行飞书API调用
- 优先使用字段实例方法而非表格方法
- 批量操作时注意性能优化

## 常见问题解决

### 字段顺序问题
- 问题：`getFieldList()` 返回的字段顺序不是表格显示顺序
- 解决：使用视图的 `getVisibleFieldIdList()` 方法

### 配置读取失败
- 问题：`mapping_config` 不存在或读取失败
- 解决：自动降级到默认配置，记录警告日志

### 字段类型判断
- 使用 `field.type` 或 `FieldType` 枚举进行类型判断
- 不同字段类型有不同的值格式和操作方法

